spring:
  application:
    name: recensioni-seguite
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        instanceId: ${spring.application.name}-${spring.cloud.client.hostname}-${random.value}
        healthCheckPath: /actuator/health
        healthCheckInterval: 10s
        healthCheckCriticalTimeout: 45s
        queryPassing: true
  datasource:
    url: jdbc:postgresql://localhost:5432/recensioni-seguite
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    initialization-mode: always
  jpa:
    show_sql: true
    hibernate:
      ddl-auto: update
      format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: asw-kafka:9092  # Indirizzo del broker Kafka
    consumer:
      group-id: recensioni-seguite-group  # Gruppo del consumer
      auto-offset-reset: earliest  
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"  # Consente la deserializzazione di tutte le classi
      topics:
        RecensioniBrevi:
          channel-in: asw-FiltroToRecensioniBreve  # Canale per RecensioniBrevi
        ConnessioniCreated:
          channel-in: asw-ConnessioneCreated  # Canale per connessioni
        ConnessioniDeleted:
          channel-in: asw-ConnessioneDeleted  # Canale per connessioni
server: 
  port: ${PORT:${SERVER_PORT:0}}
  forward-headers-strategy: framework

# fa il logging dei comandi sql eseguiti 
#spring.jpa.show-sql: true
# disable OSIV
spring.jpa.open-in-view: false